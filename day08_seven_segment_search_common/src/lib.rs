pub struct Display<'a> {
    pub patterns: [&'a[char]; 10],
    pub output: [&'a[char]; 4]
}

// Substitute with:
// '<,'>s/|\n/| /g | '<,'>s/\(\w\+\)/\&[\1],/g | '<,'>s/\(\w\)/'\1',/g | '<,'>s/^\(.*\) | \(.*\)/    Display { patterns: [\1], output: [\2] },/

pub const SAMPLE_DATA: [Display; 10] = [
    Display { patterns: [&['b','e',], &['c','f','b','e','g','a','d',], &['c','b','d','g','e','f',], &['f','g','a','e','c','d',], &['c','g','e','b',], &['f','d','c','g','e',], &['a','g','e','b','f','d',], &['f','e','c','d','b',], &['f','a','b','c','d',], &['e','d','b',],], output: [&['f','d','g','a','c','b','e',], &['c','e','f','d','b',], &['c','e','f','b','g','d',], &['g','c','b','e',],] },
    Display { patterns: [&['e','d','b','f','g','a',], &['b','e','g','c','d',], &['c','b','g',], &['g','c',], &['g','c','a','d','e','b','f',], &['f','b','g','d','e',], &['a','c','b','g','f','d',], &['a','b','c','d','e',], &['g','f','c','b','e','d',], &['g','f','e','c',],], output: [&['f','c','g','e','d','b',], &['c','g','b',], &['d','g','e','b','a','c','f',], &['g','c',],] },
    Display { patterns: [&['f','g','a','e','b','d',], &['c','g',], &['b','d','a','e','c',], &['g','d','a','f','b',], &['a','g','b','c','f','d',], &['g','d','c','b','e','f',], &['b','g','c','a','d',], &['g','f','a','c',], &['g','c','b',], &['c','d','g','a','b','e','f',],], output: [&['c','g',], &['c','g',], &['f','d','c','a','g','b',], &['c','b','g',],] },
    Display { patterns: [&['f','b','e','g','c','d',], &['c','b','d',], &['a','d','c','e','f','b',], &['d','a','g','e','b',], &['a','f','c','b',], &['b','c',], &['a','e','f','d','c',], &['e','c','d','a','b',], &['f','g','d','e','c','a',], &['f','c','d','b','e','g','a',],], output: [&['e','f','a','b','c','d',], &['c','e','d','b','a',], &['g','a','d','f','e','c',], &['c','b',],] },
    Display { patterns: [&['a','e','c','b','f','d','g',], &['f','b','g',], &['g','f',], &['b','a','f','e','g',], &['d','b','e','f','a',], &['f','c','g','e',], &['g','c','b','e','a',], &['f','c','a','e','g','b',], &['d','g','c','e','a','b',], &['f','c','b','d','g','a',],], output: [&['g','e','c','f',], &['e','g','d','c','a','b','f',], &['b','g','f',], &['b','f','g','e','a',],] },
    Display { patterns: [&['f','g','e','a','b',], &['c','a',], &['a','f','c','e','b','g',], &['b','d','a','c','f','e','g',], &['c','f','a','e','d','g',], &['g','c','f','d','b',], &['b','a','e','c',], &['b','f','a','d','e','g',], &['b','a','f','g','c',], &['a','c','f',],], output: [&['g','e','b','d','c','f','a',], &['e','c','b','a',], &['c','a',], &['f','a','d','e','g','c','b',],] },
    Display { patterns: [&['d','b','c','f','g',], &['f','g','d',], &['b','d','e','g','c','a','f',], &['f','g','e','c',], &['a','e','g','b','d','f',], &['e','c','d','f','a','b',], &['f','b','e','d','c',], &['d','a','c','g','b',], &['g','d','c','e','b','f',], &['g','f',],], output: [&['c','e','f','g',], &['d','c','b','e','f',], &['f','c','g','e',], &['g','b','c','a','d','f','e',],] },
    Display { patterns: [&['b','d','f','e','g','c',], &['c','b','e','g','a','f',], &['g','e','c','b','f',], &['d','f','c','a','g','e',], &['b','d','a','c','g',], &['e','d',], &['b','e','d','f',], &['c','e','d',], &['a','d','c','b','e','f','g',], &['g','e','b','c','d',],], output: [&['e','d',], &['b','c','g','a','f','e',], &['c','d','g','b','a',], &['c','b','g','e','f',],] },
    Display { patterns: [&['e','g','a','d','f','b',], &['c','d','b','f','e','g',], &['c','e','g','d',], &['f','e','c','a','b',], &['c','g','b',], &['g','b','d','e','f','c','a',], &['c','g',], &['f','g','c','d','a','b',], &['e','g','f','d','b',], &['b','f','c','e','g',],], output: [&['g','b','d','f','c','a','e',], &['b','g','c',], &['c','g',], &['c','g','b',],] },
    Display { patterns: [&['g','c','a','f','b',], &['g','c','f',], &['d','c','a','e','b','f','g',], &['e','c','a','g','b',], &['g','f',], &['a','b','c','d','e','g',], &['g','a','e','f',], &['c','a','f','b','g','e',], &['f','d','b','a','c',], &['f','e','g','b','d','c',],], output: [&['f','g','a','e',], &['c','f','g','a','b',], &['f','g',], &['b','a','g','c','e',],] },
];
